#!/usr/bin/env bash

open=0
verbose=0

while getopts 'ov' OPT; do
    case $OPT in
        o) open=1;;
        v) verbose=1;;
    esac
done
shift $(($OPTIND - 1))

[[ $# -eq 2 ]] || { echo "rmd2 <output_format> <file>" >&2; exit 2; }

case $1 in
    pdf)  out="rmarkdown::pdf_document"
          opt='latex_engine = "xelatex", pandoc_args = "-drmd2pdf"'
          ;;
    pdf2) out="bookdown::pdf_document2"
          opt='latex_engine = "xelatex", pandoc_args = "-drmd2pdf"'
          ;;
    odt)  out="rmarkdown::odt_document"
          opt='pandoc_args = "-drmd2odt"'
          ;;
    docx) out="officedown::rdocx_document"
          opt="base_format = 'bookdown::word_document2', \
               pandoc_args = '-drmd2docx', \
               mapstyles   = list('Body Text' = c('First Paragraph')), \
               tables      = list(caption = list(pre = '表', sep = '  ')), \
               plots       = list(caption = list(pre = '图', sep = '  ')), \
               lists       = list(ol.style = 'List Number 2', ul.style = 'List Bullet 2'), \
               reference_docx = \"$HOME/.pandoc/templates/custom-reference.docx\""
          ;;
    docx2) out="bookdown::word_document2"
          opt="pandoc_args = '-drmd2docx', reference_docx = \"$HOME/.pandoc/templates/custom-reference.docx\""
          ;;
    beamer)
          out="rmarkdown::beamer_presentation"
          opt='pandoc_args = "-drmd2beamer"'
          ;;
    html) out="rmarkdown::html_document"
          opt='pandoc_args = "-drmd2html"'
          ;;
    html2)
          out="bookdown::html_document2"
          opt='pandoc_args = "-drmd2html", keep_md = TRUE'
          ;;
esac

command="rmarkdown::render('$2', $out(md_extensions = '+emoji+east_asian_line_breaks', $opt))"
if [[ $verbose -eq 0 ]]; then
    Rscript -e "$command" >/dev/null
else
    Rscript --verbose -e "$command"
fi

[[ $open -eq 1 ]] && xdg-open "${2%.*md}.${1%[0-9]}"

exit 0

