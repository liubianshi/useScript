#!/usr/bin/env bash
set -eu

Usage() {
    echo "$(basename $0) <url>"
    exit -1
}

[ $# -ne 1 ] && Usage
url="$1"

tmphtml=$(mktemp /tmp/html2md.XXXXXX.html)
tmpmd=$(mktemp /tmp/html2md.XXXXXX.md)
trap 'rm "$tmphtml" "$tmpmd"' 0 1 15

curl -sL -x "http://127.0.0.1:8118" -o "$tmphtml" "$url"

code="$(enca -L chinese $tmphtml | awk -F'; ' 'NR == 1 {print $2}')"
if [[ "$code" =~ ^(GB|BIG|HZ) ]]; then
    cp "$tmphtml" "${tmphtml}.origin"
    iconv -f gb18030 -t "UTF-8" ${tmphtml}.origin > $tmphtml
    rm ${tmphtml}.origin
fi

$HOME/useScript/html-simplify "$tmphtml" > "$tmpmd"
title="$(grep -E '^\s*<title>' $tmpmd | sed -En 's/\s*<title>(.*)<\/title>\s*$/\1/p')"

if [[ -n $title ]]; then
    filename="$(date +%Y%m%d)-${title// /_}"
    echo -e "# $title\n\n资料来源:<$url>\n\n" > "$tmphtml"
    pandoc -f html -t markdown_strict "$tmpmd" >> "$tmphtml"
    prettier --parser 'markdown' --print-width 79 --prose-wrap 'always' "$tmphtml" > "$HOME/Documents/Digest/${filename}.md"
    nvim +'cd $HOME/Documents/Digest' "$HOME/Documents/Digest/${filename}.md"
else
    echo "[notitle]($url)\n==========\n\n" > "$tmphtml"
    pandoc -f html -t markdown_strict -o "$tmpmd" >> "$tmphtml"
    prettier --parser 'markdown' --print-width 79 --prose-wrap 'always' "$tmphtml" | nvim +'set ft=pandoc; cd $HOME/Documents/Digest'
fi
