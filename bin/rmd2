#!/usr/bin/env bash

open=0
verbose=0

while getopts 'ov' OPT; do
    case $OPT in
        o)  open=1
            ;;
        v)  verbose=1
            ;;
        *)  echo "rmd2 [-ov] <output_format> <file>"
            exit 2
            ;;
    esac
done
shift $((OPTIND - 1))

[[ $# -eq 2 ]] || { echo "rmd2 [-ov] <output_format> <file>" >&2; exit 2; }
case "$1" in
    pdf)
        out="rmarkdown::pdf_document"
        opt='latex_engine = "xelatex", pandoc_args = "-d2pdf"'
        ext="pdf"
        ;;
    pdf2)
        out="bookdown::pdf_document2"
        opt='latex_engine = "xelatex", pandoc_args = "-d2pdf"'
        ext="pdf"
        ;;
    odt)
        out="rmarkdown::odt_document"
        opt='pandoc_args = "-drmd2odt"'
        ext="odt"
        ;;
    docx)
        out="officedown::rdocx_document"
        opt="base_format = 'bookdown::word_document2', \
            pandoc_args = '-d2docx', \
            keep_md = TRUE, \
            mapstyles   = list('Body Text' = c('First Paragraph')), \
            tables      = list(caption = list(pre = '表', sep = '  ')), \
            plots       = list(caption = list(pre = '图', sep = '  ')), \
            reference_docx = \"$HOME/.pandoc/templates/custom-reference.docx\""
        ext="docx"
        ;;
    docx2)
        out="bookdown::word_document2"
        opt="pandoc_args = '-d2docx', \
             keep_md = TRUE, \
             reference_docx = \"$HOME/.pandoc/templates/custom-reference.docx\""
        ext="docx"
        ;;
    beamer)
        out="rmarkdown::beamer_presentation"
        opt='pandoc_args = "-drmd2beamer"'
        ext="pdf"
        ;;
    html)
        out="rmarkdown::html_document"
        opt='pandoc_args = "-d2html", keep_md = TRUE'
        ext="html"
        ;;
    html2)
        out="bookdown::html_document2"
        opt='pandoc_args = "-d2html", keep_md = TRUE'
        ext="html"
        ;;
    *)  echo "format not supported!"
        exit 1
        ;;
esac

input_file=$(readlink -f "$2")
outfile=$(basename "$input_file").$ext
outdir="$HOME/Documents/genfile/$(date +%F)"
mkdir -p "$outdir" || exit 1
cd "$outdir" || exit 3

command="rmarkdown::render('$input_file', output_file = '$outdir/$outfile', \
    $out(md_extensions = '+emoji+east_asian_line_breaks', $opt))"

if [[ $verbose -eq 0 ]]; then
    Rscript -e "$command" >/dev/null
else
    Rscript --verbose -e "$command"
fi

[[ $open -eq 1 ]] && xdg-open "$outfile"

exit 0

